package com.tokmak.project.euler;


/**
 * @author life
 * @email dev@tokmak.org
 *
 * Each new term in the Fibonacci sequence is generated by adding the previous two terms. 
 * By starting with 1 and 2, the first 10 terms will be: 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
 * 
 * By considering the terms in the Fibonacci sequence whose values do not exceed four million, 
 * find the sum of the even-valued terms.
 *
 */
public class Question2
{
	private static final Integer FIBONACCI_CONSTANT = 4000000;

	/**
	 * @param args
	 */
	public static void main(String[] args)
	{
		Integer result = solveFibonacciEvenValuedTerms(FIBONACCI_CONSTANT);
		System.out.println(result);
	}
	
	/**
	 * @param argLimit
	 * @return the fibonacci sequence sum
	 * 
	 * The result for constant 4Million is: 4613732
	 */
	private static Integer solveFibonacciEvenValuedTerms(Integer argLimit)
	{
		Integer result 	= 0;
		
		Integer a 		= 1;
		Integer b 		= 1;
		Integer swap 	= null;

		while(a <= FIBONACCI_CONSTANT)
		{
			if(a % 2 == 0) {
				result += a;
			}
			swap = a + b;
			a = b;
			b = swap;
		}
		
		return result;
	}
}
